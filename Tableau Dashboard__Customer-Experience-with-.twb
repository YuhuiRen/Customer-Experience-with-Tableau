<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.DatagraphCoreV1.true...DatagraphCoreV1 />
    <_.fcp.DatagraphNodeAxisTitle.true...DatagraphNodeAxisTitle />
    <_.fcp.DatagraphNodeSingleValueFieldV1.true...DatagraphNodeSingleValueFieldV1 />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Pick a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
        <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
        <members>
          <member value='&quot;Overall Rating&quot;' />
          <member value='&quot;Cabin Staff Service&quot;' />
          <member value='&quot;Entertainment&quot;' />
          <member value='&quot;Groud Service&quot;' />
          <member value='&quot;Seat Comfort&quot;' />
          <member value='&quot;Value for Money&quot;' />
          <member value='&quot;Food Beverages&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Reviews and Ratings+' inline='true' name='federated.0xviwsz1scxcxn1ahvlxd12sjos8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Reviews and Ratings' name='textscan.029l9e80rcvjf91goh2ft15nrxhn'>
            <connection class='textscan' directory='D:/DA preparation/00000000000000 Projects/Tableau' filename='Reviews and Ratings.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.029l9e80rcvjf91goh2ft15nrxhn' name='Countries.csv' table='[Countries#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='string' name='Continent' ordinal='2' />
            <column datatype='string' name='Region' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.029l9e80rcvjf91goh2ft15nrxhn' name='Reviews and Ratings.csv' table='[Reviews and Ratings#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='header' ordinal='0' />
              <column datatype='string' name='author' ordinal='1' />
              <column datatype='date' name='date' ordinal='2' />
              <column datatype='string' name='place' ordinal='3' />
              <column datatype='string' name='content' ordinal='4' />
              <column datatype='string' name='aircraft' ordinal='5' />
              <column datatype='string' name='traveller_type' ordinal='6' />
              <column datatype='string' name='seat_type' ordinal='7' />
              <column datatype='string' name='route' ordinal='8' />
              <column datatype='date' name='date_flown' ordinal='9' />
              <column datatype='string' name='recommended' ordinal='10' />
              <column datatype='string' name='trip_verified' ordinal='11' />
              <column datatype='integer' name='rating' ordinal='12' />
              <column datatype='integer' name='seat_comfort' ordinal='13' />
              <column datatype='integer' name='cabin_staff_service' ordinal='14' />
              <column datatype='integer' name='food_beverages' ordinal='15' />
              <column datatype='integer' name='ground_service' ordinal='16' />
              <column datatype='integer' name='value_for_money' ordinal='17' />
              <column datatype='integer' name='entertainment' ordinal='18' />
            </columns>
          </relation>
          <relation connection='textscan.029l9e80rcvjf91goh2ft15nrxhn' name='Countries.csv' table='[Countries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='string' name='Continent' ordinal='2' />
              <column datatype='string' name='Region' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Reviews and Ratings.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>header</remote-name>
            <remote-type>129</remote-type>
            <local-name>[header]</local-name>
            <parent-name>[Reviews and Ratings.csv]</parent-name>
            <remote-alias>header</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>author</remote-name>
            <remote-type>129</remote-type>
            <local-name>[author]</local-name>
            <parent-name>[Reviews and Ratings.csv]</parent-name>
            <remote-alias>author</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Reviews and Ratings.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place]</local-name>
            <parent-name>[Reviews and Ratings.csv]</parent-name>
            <remote-alias>place</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>content</remote-name>
            <remote-type>129</remote-type>
            <local-name>[content]</local-name>
            <parent-name>[Reviews and Ratings.csv]</parent-name>
            <remote-alias>content</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aircraft</remote-name>
            <remote-type>129</remote-type>
            <local-name>[aircraft]</local-name>
            <parent-name>[Reviews and Ratings.csv]</parent-name>
            <remote-alias>aircraft</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>traveller_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[traveller_type]</local-name>
            <parent-name>[Reviews and Ratings.csv]</parent-name>
            <remote-alias>traveller_type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seat_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[seat_type]</local-name>
            <parent-name>[Reviews and Ratings.csv]</parent-name>
            <remote-alias>seat_type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[Reviews and Ratings.csv]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_flown</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date_flown]</local-name>
            <parent-name>[Reviews and Ratings.csv]</parent-name>
            <remote-alias>date_flown</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recommended</remote-name>
            <remote-type>129</remote-type>
            <local-name>[recommended]</local-name>
            <parent-name>[Reviews and Ratings.csv]</parent-name>
            <remote-alias>recommended</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_verified</remote-name>
            <remote-type>129</remote-type>
            <local-name>[trip_verified]</local-name>
            <parent-name>[Reviews and Ratings.csv]</parent-name>
            <remote-alias>trip_verified</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[Reviews and Ratings.csv]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seat_comfort</remote-name>
            <remote-type>20</remote-type>
            <local-name>[seat_comfort]</local-name>
            <parent-name>[Reviews and Ratings.csv]</parent-name>
            <remote-alias>seat_comfort</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cabin_staff_service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cabin_staff_service]</local-name>
            <parent-name>[Reviews and Ratings.csv]</parent-name>
            <remote-alias>cabin_staff_service</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>food_beverages</remote-name>
            <remote-type>20</remote-type>
            <local-name>[food_beverages]</local-name>
            <parent-name>[Reviews and Ratings.csv]</parent-name>
            <remote-alias>food_beverages</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ground_service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ground_service]</local-name>
            <parent-name>[Reviews and Ratings.csv]</parent-name>
            <remote-alias>ground_service</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value_for_money</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value_for_money]</local-name>
            <parent-name>[Reviews and Ratings.csv]</parent-name>
            <remote-alias>value_for_money</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>entertainment</remote-name>
            <remote-type>20</remote-type>
            <local-name>[entertainment]</local-name>
            <parent-name>[Reviews and Ratings.csv]</parent-name>
            <remote-alias>entertainment</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries.csv_4469C6D421514FD08BB635EFE4CE919F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries.csv_4469C6D421514FD08BB635EFE4CE919F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries.csv_4469C6D421514FD08BB635EFE4CE919F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries.csv_4469C6D421514FD08BB635EFE4CE919F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Aircraft (group) ' datatype='string' name='[Aircraft (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
          <bin default-name='false' value='&quot;Others&quot;'>
            <value>&quot;777&quot;</value>
            <value>&quot;777-300 and A320&quot;</value>
            <value>&quot;787&quot;</value>
            <value>&quot;A19&quot;</value>
            <value>&quot;A219&quot;</value>
            <value>&quot;A230&quot;</value>
            <value>&quot;A318&quot;</value>
            <value>&quot;A319 / A380 / Boeing 737&quot;</value>
            <value>&quot;A319 / Boeing 747&quot;</value>
            <value>&quot;A319 / Boeing 747-400&quot;</value>
            <value>&quot;A319 / Boeing 777&quot;</value>
            <value>&quot;A319 / Boeing 787-8&quot;</value>
            <value>&quot;A319 / Boeing 787-9&quot;</value>
            <value>&quot;A319 / Boeing 789&quot;</value>
            <value>&quot;A319 / Boeing777&quot;</value>
            <value>&quot;A319/320&quot;</value>
            <value>&quot;A319/A320&quot;</value>
            <value>&quot;A320 / Boeing 747-400&quot;</value>
            <value>&quot;A320 / Boeing 767&quot;</value>
            <value>&quot;A320 / Boeing 777&quot;</value>
            <value>&quot;A320 / Boeing 777-200&quot;</value>
            <value>&quot;A320 / Boeing 787&quot;</value>
            <value>&quot;A320 / Boeing 787-9&quot;</value>
            <value>&quot;A320 A350&quot;</value>
            <value>&quot;A320 Finnair&quot;</value>
            <value>&quot;A320 neo&quot;</value>
            <value>&quot;A320 Neo&quot;</value>
            <value>&quot;A320-200&quot;</value>
            <value>&quot;A320-233&quot;</value>
            <value>&quot;A320, A380&quot;</value>
            <value>&quot;A320, Boeing 787&quot;</value>
            <value>&quot;A320/319&quot;</value>
            <value>&quot;A320/A319&quot;</value>
            <value>&quot;A320/B788&quot;</value>
            <value>&quot;A320neo&quot;</value>
            <value>&quot;A320Neo&quot;</value>
            <value>&quot;A320NEO&quot;</value>
            <value>&quot;A321 / Boeing 747-400&quot;</value>
            <value>&quot;A321 / Boeing 777&quot;</value>
            <value>&quot;A321 / Boeing 777-300&quot;</value>
            <value>&quot;A321 / Boeing 787-9&quot;</value>
            <value>&quot;A321 neo&quot;</value>
            <value>&quot;A321 Neo&quot;</value>
            <value>&quot;A321-200&quot;</value>
            <value>&quot;A321-neo&quot;</value>
            <value>&quot;A321neo&quot;</value>
            <value>&quot;A321Neo&quot;</value>
            <value>&quot;A321NEO&quot;</value>
            <value>&quot;A322&quot;</value>
            <value>&quot;A330&quot;</value>
            <value>&quot;A340-300&quot;</value>
            <value>&quot;A340-300, A320&quot;</value>
            <value>&quot;A350&quot;</value>
            <value>&quot;A350-1000&quot;</value>
            <value>&quot;A380 / A319&quot;</value>
            <value>&quot;A380 / A320&quot;</value>
            <value>&quot;A380 / Boeing 747-400&quot;</value>
            <value>&quot;A380 / Boeing 777&quot;</value>
            <value>&quot;A380 and 747&quot;</value>
            <value>&quot;A380 and Boeing 747&quot;</value>
            <value>&quot;A380 and Boeing 767&quot;</value>
            <value>&quot;A380 and Boeing 777&quot;</value>
            <value>&quot;A380-800&quot;</value>
            <value>&quot;A380/A320&quot;</value>
            <value>&quot;Airbus A32&quot;</value>
            <value>&quot;Airbus A320&quot;</value>
            <value>&quot;B737-400 / A380 / A319&quot;</value>
            <value>&quot;B747-400&quot;</value>
            <value>&quot;B747-400 in retro&quot;</value>
            <value>&quot;B777&quot;</value>
            <value>&quot;B777-200&quot;</value>
            <value>&quot;B777-300ER / A320 / A380&quot;</value>
            <value>&quot;Boeing 737&quot;</value>
            <value>&quot;Boeing 737 800&quot;</value>
            <value>&quot;Boeing 737-800&quot;</value>
            <value>&quot;Boeing 744&quot;</value>
            <value>&quot;Boeing 747 / 777&quot;</value>
            <value>&quot;Boeing 747 / A320&quot;</value>
            <value>&quot;Boeing 747 / A380&quot;</value>
            <value>&quot;Boeing 747 &amp; A319&quot;</value>
            <value>&quot;Boeing 747 400&quot;</value>
            <value>&quot;Boeing 747 and Boeing 777&quot;</value>
            <value>&quot;Boeing 747-400 / 777&quot;</value>
            <value>&quot;Boeing 747-400 / 777-200&quot;</value>
            <value>&quot;Boeing 747-400 / A319&quot;</value>
            <value>&quot;Boeing 747-400 / A320&quot;</value>
            <value>&quot;Boeing 747-400 / A380&quot;</value>
            <value>&quot;Boeing 747-400 /A380&quot;</value>
            <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
            <value>&quot;Boeing 757&quot;</value>
            <value>&quot;Boeing 767&quot;</value>
            <value>&quot;Boeing 767-300&quot;</value>
            <value>&quot;Boeing 767, A319&quot;</value>
            <value>&quot;Boeing 777&quot;</value>
            <value>&quot;Boeing 777 - 200&quot;</value>
            <value>&quot;Boeing 777 -200&quot;</value>
            <value>&quot;Boeing 777 / 747&quot;</value>
            <value>&quot;Boeing 777 / A320&quot;</value>
            <value>&quot;Boeing 777 / A380&quot;</value>
            <value>&quot;Boeing 777 200&quot;</value>
            <value>&quot;Boeing 777 200/300&quot;</value>
            <value>&quot;Boeing 777 and Boeing 787&quot;</value>
            <value>&quot;Boeing 777-200 / 747-400&quot;</value>
            <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
            <value>&quot;Boeing 777-200 and A319&quot;</value>
            <value>&quot;Boeing 777-200 ER&quot;</value>
            <value>&quot;Boeing 777-200/300&quot;</value>
            <value>&quot;Boeing 777-200ER&quot;</value>
            <value>&quot;Boeing 777-236 ER&quot;</value>
            <value>&quot;Boeing 777-300&quot;</value>
            <value>&quot;Boeing 777-300 / A380&quot;</value>
            <value>&quot;Boeing 777-300ER&quot;</value>
            <value>&quot;Boeing 777-300ER / A320&quot;</value>
            <value>&quot;Boeing 787 / A320&quot;</value>
            <value>&quot;Boeing 787 Dreamliner&quot;</value>
            <value>&quot;Boeing 787-10&quot;</value>
            <value>&quot;Boeing 787-8&quot;</value>
            <value>&quot;Boeing 787-8 / 787-9&quot;</value>
            <value>&quot;Boeing 787-800&quot;</value>
            <value>&quot;Boeing 787-9&quot;</value>
            <value>&quot;Boeing 787-9 / 777&quot;</value>
            <value>&quot;Boeing 787-9 / A319&quot;</value>
            <value>&quot;Boeing 787-9 / A380-800&quot;</value>
            <value>&quot;Boeing 787-9, A320-200&quot;</value>
            <value>&quot;Boeing 787-9, A380&quot;</value>
            <value>&quot;Boeing 787-900&quot;</value>
            <value>&quot;Boeing 787(9)&quot;</value>
            <value>&quot;Boieng 777-200&quot;</value>
            <value>&quot;Dreamliner&quot;</value>
            <value>&quot;E-190&quot;</value>
            <value>&quot;E170 / A319&quot;</value>
            <value>&quot;E190&quot;</value>
            <value>&quot;EMB190&quot;</value>
            <value>&quot;Embraer&quot;</value>
            <value>&quot;Embraer 170&quot;</value>
            <value>&quot;Embraer 190&quot;</value>
            <value>&quot;Embraer 195&quot;</value>
            <value>&quot;Embraer-190&quot;</value>
            <value>&quot;SAAB 2000&quot;</value>
            <value>&quot;Various&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Metric Selected' datatype='integer' name='[Calculation_1219631135284645889]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Overall Rating&apos; THEN [rating]&#13;&#10;WHEN &apos;Cabin Staff Service&apos; THEN [cabin_staff_service]&#13;&#10;WHEN &apos;Entertainment&apos; THEN [entertainment]&#13;&#10;WHEN &apos;Food Beverages&apos; THEN [food_beverages]&#13;&#10;WHEN &apos;Groud Service&apos; THEN [ground_service]&#13;&#10;WHEN &apos;Seat Comfort&apos; THEN [seat_comfort]&#13;&#10;WHEN &apos;Value for Money&apos; THEN [value_for_money]&#13;&#10;END' />
      </column>
      <column caption='CNT of reviews' datatype='integer' name='[Calculation_2101210762528751616]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([rating])' />
      </column>
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Countries.csv' datatype='table' name='[__tableau_internal_object_id__].[Countries.csv_4469C6D421514FD08BB635EFE4CE919F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Reviews and Ratings.csv' datatype='table' name='[__tableau_internal_object_id__].[Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A]' role='measure' type='quantitative' />
      <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
      <column caption='Author' datatype='string' name='[author]' role='dimension' type='nominal' />
      <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
      <column caption='Content' datatype='string' name='[content]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Flown' datatype='date' name='[date_flown]' role='dimension' type='ordinal' />
      <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
      <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
      <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
      <column caption='Header' datatype='string' name='[header]' role='dimension' type='nominal' />
      <column datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Recommended' datatype='string' name='[recommended]' role='dimension' type='nominal' />
      <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
      <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
      <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
      <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
      <column caption='Trip Verified' datatype='string' name='[trip_verified]' role='dimension' type='nominal' />
      <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Aircraft (group) )' hidden='true' name='[Action (Aircraft (group) )]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Aircraft (group) 1]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Date))' hidden='true' name='[Action (MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (place)' hidden='true' name='[Action (place)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[place]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Pick a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
          <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
        </column>
      </datasource-dependencies>
      <filter class='categorical' column='[none:Continent:nk]' filter-group='2'>
        <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[none:seat_type:nk]' filter-group='2'>
        <groupfilter function='level-members' level='[none:seat_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[none:traveller_type:nk]' filter-group='2'>
        <groupfilter function='level-members' level='[none:traveller_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[traveller_type]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[traveller_type]' />
          <groupfilter function='member' level='[traveller_type]' member='%null%' />
        </groupfilter>
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Countries.csv' id='Countries.csv_4469C6D421514FD08BB635EFE4CE919F'>
            <properties context=''>
              <relation connection='textscan.029l9e80rcvjf91goh2ft15nrxhn' name='Countries.csv' table='[Countries#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='string' name='Continent' ordinal='2' />
                  <column datatype='string' name='Region' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Reviews and Ratings.csv' id='Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A'>
            <properties context=''>
              <relation connection='textscan.029l9e80rcvjf91goh2ft15nrxhn' name='Reviews and Ratings.csv' table='[Reviews and Ratings#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='header' ordinal='0' />
                  <column datatype='string' name='author' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='string' name='place' ordinal='3' />
                  <column datatype='string' name='content' ordinal='4' />
                  <column datatype='string' name='aircraft' ordinal='5' />
                  <column datatype='string' name='traveller_type' ordinal='6' />
                  <column datatype='string' name='seat_type' ordinal='7' />
                  <column datatype='string' name='route' ordinal='8' />
                  <column datatype='date' name='date_flown' ordinal='9' />
                  <column datatype='string' name='recommended' ordinal='10' />
                  <column datatype='string' name='trip_verified' ordinal='11' />
                  <column datatype='integer' name='rating' ordinal='12' />
                  <column datatype='integer' name='seat_comfort' ordinal='13' />
                  <column datatype='integer' name='cabin_staff_service' ordinal='14' />
                  <column datatype='integer' name='food_beverages' ordinal='15' />
                  <column datatype='integer' name='ground_service' ordinal='16' />
                  <column datatype='integer' name='value_for_money' ordinal='17' />
                  <column datatype='integer' name='entertainment' ordinal='18' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[place]' />
              <expression op='[Country]' />
            </expression>
            <first-end-point object-id='Reviews and Ratings.csv_0CA99EB3257143BB9BDEB5C6FFF6AF6A' />
            <second-end-point object-id='Countries.csv_4469C6D421514FD08BB635EFE4CE919F' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0xviwsz1scxcxn1ahvlxd12sjos8'>
      <datasources>
        <datasource caption='Reviews and Ratings+' name='federated.0xviwsz1scxcxn1ahvlxd12sjos8' />
      </datasources>
      <datasource-dependencies datasource='federated.0xviwsz1scxcxn1ahvlxd12sjos8'>
        <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
        <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
        <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
        <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:Continent:nk]'>
        <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:seat_type:nk]'>
        <groupfilter function='level-members' level='[none:seat_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:traveller_type:nk]'>
        <groupfilter function='level-members' level='[none:traveller_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[tmn:date:qk]' included-values='in-range-or-null'>
        <min>#2016-03-01 00:00:00#</min>
        <max>#2023-10-01 00:00:00#</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_950EA70C392047F9B64F0A276D7FC18B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_E992E2A348CE409A8ED80F54BAE42011]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_4977E110762C448FB09DFA5BAD17FB0F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='aircraft' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='aircraft'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Average &lt;</run>
            <run bold='true' fontalignment='1' fontsize='12'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1' fontsize='12'>&gt; by Aircraft</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Reviews and Ratings+' name='federated.0xviwsz1scxcxn1ahvlxd12sjos8' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Pick a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
              <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0xviwsz1scxcxn1ahvlxd12sjos8'>
            <column caption='Aircraft (group) ' datatype='string' name='[Aircraft (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-300 and A320&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A230&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A380 / Boeing 737&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 747-400&quot;</value>
                  <value>&quot;A319 / Boeing 777&quot;</value>
                  <value>&quot;A319 / Boeing 787-8&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing 789&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A320 / Boeing 747-400&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 777-200&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 / Boeing 787-9&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320, Boeing 787&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/B788&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 / Boeing 747-400&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 / Boeing 777-300&quot;</value>
                  <value>&quot;A321 / Boeing 787-9&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / A319&quot;</value>
                  <value>&quot;A380 / A320&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 767&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;A380/A320&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 &amp; A319&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777-200&quot;</value>
                  <value>&quot;Boeing 747-400 / A319&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 747-400 /A380&quot;</value>
                  <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 777&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / 747&quot;</value>
                  <value>&quot;Boeing 777 / A320&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
                  <value>&quot;Boeing 777-200 and A319&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300 / A380&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 777-300ER / A320&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9 / 777&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-9 / A380-800&quot;</value>
                  <value>&quot;Boeing 787-9, A320-200&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                  <value>&quot;Various&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_1219631135284645889]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Overall Rating&apos; THEN [rating]&#13;&#10;WHEN &apos;Cabin Staff Service&apos; THEN [cabin_staff_service]&#13;&#10;WHEN &apos;Entertainment&apos; THEN [entertainment]&#13;&#10;WHEN &apos;Food Beverages&apos; THEN [food_beverages]&#13;&#10;WHEN &apos;Groud Service&apos; THEN [ground_service]&#13;&#10;WHEN &apos;Seat Comfort&apos; THEN [seat_comfort]&#13;&#10;WHEN &apos;Value for Money&apos; THEN [value_for_money]&#13;&#10;END' />
            </column>
            <column caption='CNT of reviews' datatype='integer' name='[Calculation_2101210762528751616]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([rating])' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1219631135284645889]' derivation='Avg' name='[avg:Calculation_1219631135284645889:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1219631135284645889]' derivation='Count' name='[cnt:Calculation_1219631135284645889:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2101210762528751616]' derivation='User' name='[usr:Calculation_2101210762528751616:qk]' pivot='key' type='quantitative' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:date:ok]' user:ui-action-filter='[Action2_E992E2A348CE409A8ED80F54BAE42011]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Action (place)]'>
            <groupfilter function='level-members' level='[place]' user:ui-action-filter='[Action1_950EA70C392047F9B64F0A276D7FC18B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Aircraft (group) 1]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:Continent:nk]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:seat_type:nk]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:traveller_type:nk]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[tmn:date:qk]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Action (place)]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Action (MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]' scope='cols' value='Overall Rating' />
            <format attr='title' class='0' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[cnt:Calculation_1219631135284645889:qk]' scope='cols' value='Number of Reviews' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <encoding attr='space' class='0' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]' field-type='quantitative' minor-origin='0.0' minor-spacing='1.0' scope='cols' type='space' />
            <format attr='height' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]' value='45' />
            <format attr='height' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[cnt:Calculation_1219631135284645889:qk]' value='45' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='height' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Aircraft (group) 1]' value='21' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]' />
              <tooltip column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[usr:Calculation_2101210762528751616:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#666666'>Aircraft : </run>
                <run bold='true'><![CDATA[<[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Aircraft (group) 1]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[Average <[Parameters].[Parameter 1]>: ]]></run>
                <run bold='true'><![CDATA[<[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#666666'>Number of Reviews:</run>
                <run bold='true'><![CDATA[ <[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[usr:Calculation_2101210762528751616:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[cnt:Calculation_1219631135284645889:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Aircraft : </run>
                <run bold='true'><![CDATA[<[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Aircraft (group) 1]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#666666'><![CDATA[Average <[Parameters].[Parameter 1]>: ]]></run>
                <run bold='true' fontcolor='#666666'><![CDATA[<[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Reviews: </run>
                <run bold='true'><![CDATA[<[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[cnt:Calculation_1219631135284645889:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Aircraft (group) 1]</rows>
        <cols>([federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk] + [federated.0xviwsz1scxcxn1ahvlxd12sjos8].[cnt:Calculation_1219631135284645889:qk])</cols>
      </table>
      <simple-id uuid='{B35E06A1-FD62-43C1-BA2F-4EB45039BD5C}' />
    </worksheet>
    <worksheet name='map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Average &lt;</run>
            <run bold='true' fontalignment='1' fontsize='12'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1' fontsize='12'>&gt; by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Reviews and Ratings+' name='federated.0xviwsz1scxcxn1ahvlxd12sjos8' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Pick a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
              <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0xviwsz1scxcxn1ahvlxd12sjos8'>
            <column caption='Aircraft (group) ' datatype='string' name='[Aircraft (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-300 and A320&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A230&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A380 / Boeing 737&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 747-400&quot;</value>
                  <value>&quot;A319 / Boeing 777&quot;</value>
                  <value>&quot;A319 / Boeing 787-8&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing 789&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A320 / Boeing 747-400&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 777-200&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 / Boeing 787-9&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320, Boeing 787&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/B788&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 / Boeing 747-400&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 / Boeing 777-300&quot;</value>
                  <value>&quot;A321 / Boeing 787-9&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / A319&quot;</value>
                  <value>&quot;A380 / A320&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 767&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;A380/A320&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 &amp; A319&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777-200&quot;</value>
                  <value>&quot;Boeing 747-400 / A319&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 747-400 /A380&quot;</value>
                  <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 777&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / 747&quot;</value>
                  <value>&quot;Boeing 777 / A320&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
                  <value>&quot;Boeing 777-200 and A319&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300 / A380&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 777-300ER / A320&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9 / 777&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-9 / A380-800&quot;</value>
                  <value>&quot;Boeing 787-9, A320-200&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                  <value>&quot;Various&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_1219631135284645889]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Overall Rating&apos; THEN [rating]&#13;&#10;WHEN &apos;Cabin Staff Service&apos; THEN [cabin_staff_service]&#13;&#10;WHEN &apos;Entertainment&apos; THEN [entertainment]&#13;&#10;WHEN &apos;Food Beverages&apos; THEN [food_beverages]&#13;&#10;WHEN &apos;Groud Service&apos; THEN [ground_service]&#13;&#10;WHEN &apos;Seat Comfort&apos; THEN [seat_comfort]&#13;&#10;WHEN &apos;Value for Money&apos; THEN [value_for_money]&#13;&#10;END' />
            </column>
            <column caption='CNT of reviews' datatype='integer' name='[Calculation_2101210762528751616]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([rating])' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1219631135284645889]' derivation='Avg' name='[avg:Calculation_1219631135284645889:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[place]' derivation='None' name='[none:place:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2101210762528751616]' derivation='User' name='[usr:Calculation_2101210762528751616:qk]' pivot='key' type='quantitative' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Action (Aircraft (group) )]'>
            <groupfilter function='level-members' level='[Aircraft (group) 1]' user:ui-action-filter='[Action3_4977E110762C448FB09DFA5BAD17FB0F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:date:ok]' user:ui-action-filter='[Action2_E992E2A348CE409A8ED80F54BAE42011]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:Continent:nk]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:seat_type:nk]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:traveller_type:nk]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[tmn:date:qk]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Action (MONTH(Date))]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Action (Aircraft (group) )]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Longitude (generated)]' field-type='quantitative' max='-46866080.013118848' min='-82714435.707647562' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Latitude (generated)]' field-type='quantitative' max='13935036.465090455' min='80978.13682728447' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.50999999046325684' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]' />
              <lod column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:place:nk]' />
              <tooltip column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[usr:Calculation_2101210762528751616:qk]' />
              <geometry column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#000000'><![CDATA[ <[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:place:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000'><![CDATA[Average <[Parameters].[Parameter 1]>:]]></run>
                <run bold='true' fontcolor='#000000'><![CDATA[	<[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000'>Number of Reviews: </run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[usr:Calculation_2101210762528751616:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Latitude (generated)]</rows>
        <cols>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3E707A52-3297-4D91-BEBA-9CAE58941B73}' />
    </worksheet>
    <worksheet name='month'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Average &lt;</run>
            <run bold='true' fontalignment='1' fontsize='12'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1' fontsize='12'>&gt; by Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Reviews and Ratings+' name='federated.0xviwsz1scxcxn1ahvlxd12sjos8' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Pick a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
              <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0xviwsz1scxcxn1ahvlxd12sjos8'>
            <column caption='Aircraft (group) ' datatype='string' name='[Aircraft (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-300 and A320&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A230&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A380 / Boeing 737&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 747-400&quot;</value>
                  <value>&quot;A319 / Boeing 777&quot;</value>
                  <value>&quot;A319 / Boeing 787-8&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing 789&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A320 / Boeing 747-400&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 777-200&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 / Boeing 787-9&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320, Boeing 787&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/B788&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 / Boeing 747-400&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 / Boeing 777-300&quot;</value>
                  <value>&quot;A321 / Boeing 787-9&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / A319&quot;</value>
                  <value>&quot;A380 / A320&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 767&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;A380/A320&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 &amp; A319&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777-200&quot;</value>
                  <value>&quot;Boeing 747-400 / A319&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 747-400 /A380&quot;</value>
                  <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 777&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / 747&quot;</value>
                  <value>&quot;Boeing 777 / A320&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
                  <value>&quot;Boeing 777-200 and A319&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300 / A380&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 777-300ER / A320&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9 / 777&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-9 / A380-800&quot;</value>
                  <value>&quot;Boeing 787-9, A320-200&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                  <value>&quot;Various&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_1219631135284645889]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Overall Rating&apos; THEN [rating]&#13;&#10;WHEN &apos;Cabin Staff Service&apos; THEN [cabin_staff_service]&#13;&#10;WHEN &apos;Entertainment&apos; THEN [entertainment]&#13;&#10;WHEN &apos;Food Beverages&apos; THEN [food_beverages]&#13;&#10;WHEN &apos;Groud Service&apos; THEN [ground_service]&#13;&#10;WHEN &apos;Seat Comfort&apos; THEN [seat_comfort]&#13;&#10;WHEN &apos;Value for Money&apos; THEN [value_for_money]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1219631135284645889]' derivation='Avg' name='[avg:Calculation_1219631135284645889:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Action (Aircraft (group) )]'>
            <groupfilter function='level-members' level='[Aircraft (group) 1]' user:ui-action-filter='[Action3_4977E110762C448FB09DFA5BAD17FB0F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Action (place)]'>
            <groupfilter function='level-members' level='[place]' user:ui-action-filter='[Action1_950EA70C392047F9B64F0A276D7FC18B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:Continent:nk]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:seat_type:nk]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:traveller_type:nk]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[tmn:date:qk]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Action (place)]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Action (Aircraft (group) )]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]' scope='rows' value='' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='tick-color' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[tmn:date:qk]' value='#00000000' />
            <format attr='width' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]' value='16' />
            <format attr='height' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[tmn:date:qk]' value='31' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='cols' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[tmn:date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[Average <[Parameters].[Parameter 1]>: ]]></run>
                <run bold='true'><![CDATA[<[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.33983424305915833' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]</rows>
        <cols>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{5464B540-3628-44E3-B239-EEB96ED40627}' />
    </worksheet>
    <worksheet name='rate numers'>
      <table>
        <view>
          <datasources>
            <datasource caption='Reviews and Ratings+' name='federated.0xviwsz1scxcxn1ahvlxd12sjos8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xviwsz1scxcxn1ahvlxd12sjos8'>
            <column caption='Aircraft (group) ' datatype='string' name='[Aircraft (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-300 and A320&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A230&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A380 / Boeing 737&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 747-400&quot;</value>
                  <value>&quot;A319 / Boeing 777&quot;</value>
                  <value>&quot;A319 / Boeing 787-8&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing 789&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A320 / Boeing 747-400&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 777-200&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 / Boeing 787-9&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320, Boeing 787&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/B788&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 / Boeing 747-400&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 / Boeing 777-300&quot;</value>
                  <value>&quot;A321 / Boeing 787-9&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / A319&quot;</value>
                  <value>&quot;A380 / A320&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 767&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;A380/A320&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 &amp; A319&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777-200&quot;</value>
                  <value>&quot;Boeing 747-400 / A319&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 747-400 /A380&quot;</value>
                  <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 777&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / 747&quot;</value>
                  <value>&quot;Boeing 777 / A320&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
                  <value>&quot;Boeing 777-200 and A319&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300 / A380&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 777-300ER / A320&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9 / 777&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-9 / A380-800&quot;</value>
                  <value>&quot;Boeing 787-9, A320-200&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                  <value>&quot;Various&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[cabin_staff_service]' derivation='Avg' name='[avg:cabin_staff_service:qk]' pivot='key' type='quantitative' />
            <column-instance column='[entertainment]' derivation='Avg' name='[avg:entertainment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[food_beverages]' derivation='Avg' name='[avg:food_beverages:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ground_service]' derivation='Avg' name='[avg:ground_service:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[seat_comfort]' derivation='Avg' name='[avg:seat_comfort:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value_for_money]' derivation='Avg' name='[avg:value_for_money:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[ground_service]' derivation='Sum' name='[sum:ground_service:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:rating:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:seat_comfort:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:value_for_money:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:cabin_staff_service:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:entertainment:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:food_beverages:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:ground_service:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:rating:qk]&quot;</bucket>
              <bucket>&quot;[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:seat_comfort:qk]&quot;</bucket>
              <bucket>&quot;[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:value_for_money:qk]&quot;</bucket>
              <bucket>&quot;[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:cabin_staff_service:qk]&quot;</bucket>
              <bucket>&quot;[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:entertainment:qk]&quot;</bucket>
              <bucket>&quot;[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:food_beverages:qk]&quot;</bucket>
              <bucket>&quot;[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[sum:ground_service:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Action (Aircraft (group) )]'>
            <groupfilter function='level-members' level='[Aircraft (group) 1]' user:ui-action-filter='[Action3_4977E110762C448FB09DFA5BAD17FB0F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:date:ok]' user:ui-action-filter='[Action2_E992E2A348CE409A8ED80F54BAE42011]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Action (place)]'>
            <groupfilter function='level-members' level='[place]' user:ui-action-filter='[Action1_950EA70C392047F9B64F0A276D7FC18B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:Continent:nk]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:seat_type:nk]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:traveller_type:nk]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[:Measure Names]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[tmn:date:qk]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Action (place)]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Action (MONTH(Date))]</column>
            <column>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Action (Aircraft (group) )]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[:Measure Names]' value='135' />
            <format attr='height' value='130' />
            <format attr='text-format' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:entertainment:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:value_for_money:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:cabin_staff_service:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:food_beverages:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:ground_service:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:seat_comfort:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:rating:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[:Measure Names]' value='false' />
            <format attr='font-weight' field='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[:Measure Names]' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#9cd0f9' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Multiple Values]' />
              <text column='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='17'><![CDATA[<[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Multiple Values]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='8'><![CDATA[<[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[:Measure Names]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='0.80160218477249146' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{1AE57B3A-92CB-475E-885F-C5967E334C6F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='520' maxwidth='1100' minheight='520' minwidth='1100' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Reviews and Ratings+' name='federated.0xviwsz1scxcxn1ahvlxd12sjos8' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Pick a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
          <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
          <members>
            <member value='&quot;Overall Rating&quot;' />
            <member value='&quot;Cabin Staff Service&quot;' />
            <member value='&quot;Entertainment&quot;' />
            <member value='&quot;Groud Service&quot;' />
            <member value='&quot;Seat Comfort&quot;' />
            <member value='&quot;Value for Money&quot;' />
            <member value='&quot;Food Beverages&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0xviwsz1scxcxn1ahvlxd12sjos8'>
        <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
        <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
        <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
        <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0' />
        <zone forceUpdate='true' h='11538' id='1' type-v2='text' w='13273' x='0' y='0'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='14'>British Airways Review</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#9cd0f9' />
          </zone-style>
        </zone>
        <zone h='11538' id='3' name='rate numers' show-title='false' w='86818' x='13182' y='0' />
        <zone h='41346' id='4' name='map' w='41818' x='0' y='58654' />
        <zone fixed-size='160' h='84808' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='13909' x='85727' y='13077'>
          <zone fixed-size='172' h='34615' id='12' is-fixed='true' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='13909' x='85727' y='13077'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='71' h='15192' id='8' is-fixed='true' name='map' param='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='13909' x='85727' y='47692'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='50' h='11153' id='10' is-fixed='true' mode='dropdown' name='map' param='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:traveller_type:nk]' type-v2='filter' w='13909' x='85727' y='62884'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='50' h='11153' id='11' is-fixed='true' mode='dropdown' name='map' param='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:seat_type:nk]' type-v2='filter' w='13909' x='85727' y='74037'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='50' h='11153' id='9' is-fixed='true' mode='dropdown' name='map' param='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:Continent:nk]' type-v2='filter' w='13909' x='85727' y='85190'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='41346' id='13' name='month' w='41818' x='41818' y='58654' />
        <zone h='47115' id='14' name='aircraft' w='84818' x='0' y='11538' />
        <zone h='88654' id='16' type-v2='empty' w='182' x='84818' y='11538'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='0' />
            <format attr='padding' value='0' />
            <format attr='background-color' value='#9cd0f9' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{9A41C439-E328-45FB-84D6-3794FA901ED9}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='dropdown' param='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:Continent:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:traveller_type:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:seat_type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Aircraft (group)]</field>
            <field>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]</field>
            <field>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:Continent:nk]</field>
            <field>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:date:qk]</field>
            <field>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:seat_type:nk]</field>
            <field>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:traveller_type:nk]</field>
            <field>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:trip_verified:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{270792D4-F660-4694-936E-00FB6F7F279D}' />
    </window>
    <window class='worksheet' name='rate numers'>
      <cards>
        <edge name='left'>
          <strip size='132'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[:Measure Names]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{14FE28FD-3EE9-4363-8741-4A50BD3A3B5A}' />
    </window>
    <window class='worksheet' name='month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2E9EE99F-5605-4563-8997-63A521E31588}' />
    </window>
    <window class='worksheet' name='aircraft'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[Aircraft (group) 1]</field>
            <field>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[none:aircraft:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{659CDB22-D68D-4288-8F01-0BFCF1792E0A}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='aircraft'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='month'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[tmn:date:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='rate numers'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DBFE3F5B-6358-492A-A8B8-402E6F4B28F3}' />
    </window>
  </windows>
  <_.fcp.DatagraphCoreV1.true...datagraph>
    <graph>
      <properties>
        <default-execution-subgraph-guid value='812c20b7-5a1b-41c4-baf6-104bbd5fe13f' />
      </properties>
      <node-execution-subgraphs>
        <pair execution-subgraph-guid='812c20b7-5a1b-41c4-baf6-104bbd5fe13f' node-guid='426aa136-3822-488a-b4b1-4f5989fe9ef7' />
        <pair execution-subgraph-guid='812c20b7-5a1b-41c4-baf6-104bbd5fe13f' node-guid='4696e226-e5c1-44d6-8882-54fcbf466343' />
      </node-execution-subgraphs>
      <nodes>
        <_.fcp.DatagraphNodeAxisTitle.true...axis-title-node duplicate-index='0' fieldname='[federated.0xviwsz1scxcxn1ahvlxd12sjos8].[avg:Calculation_1219631135284645889:qk]' node-guid='426aa136-3822-488a-b4b1-4f5989fe9ef7' orientation='horizontal' sheet-identifier='{B35E06A1-FD62-43C1-BA2F-4EB45039BD5C}' title-input-guid='52766917-1a0c-4eed-9bc6-1728cc6dfdc0' />
        <_.fcp.DatagraphNodeSingleValueFieldV1.true...single-value-field-node fieldname='[Parameters].[Parameter 1]' fieldname-input-guid='6ea39a26-8c3d-4405-8181-41806a915d5c' node-guid='4696e226-e5c1-44d6-8882-54fcbf466343' value-output-guid='4b0442d2-9f77-41e4-8423-4b0db6936af5' />
      </nodes>
      <edges>
        <edge from='4b0442d2-9f77-41e4-8423-4b0db6936af5' to='52766917-1a0c-4eed-9bc6-1728cc6dfdc0' />
      </edges>
      <pin-values />
    </graph>
  </_.fcp.DatagraphCoreV1.true...datagraph>
  <thumbnails>
    <thumbnail height='288' name='Dashboard 1' width='288'>
      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
    </thumbnail>
    <thumbnail height='288' name='aircraft' width='288'>
      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
    </thumbnail>
    <thumbnail height='288' name='map' width='288'>
      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
    </thumbnail>
    <thumbnail height='288' name='month' width='288'>
      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
      mQYORctT3CwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='201' name='rate numers' width='288'>
      iVBORw0KGgoAAAANSUhEUgAAASAAAADJCAYAAACDv+9+AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAOpElEQVR4nO3de1zUdb7H8XcIQqCY4gXLC3ghcBXxsl7wupl1tLV0y1YtzY6Umevx1Dm2
      7aN2N3ePuptr7dGKaqWburmaWccLoll5Q9Q0dAlZUVFMQZRQFAQc8PwxyMVbmjN8Jn09//vN
      b2Z+X+XHa76/3wzzu+XcuXPnBAAGvKwHAODmRYAAmCFAAMwQIABmCBAAM96XWxG3s6QmxwHg
      JsQMCIAZAgTADAECYIYAATBDgACYIUAAzBAgAGYIEAAzBAiAGQIEwAwBAmCGAAEwQ4AAmCFA
      AMwQIABmCBAAMwQIgBkCBMAMAQJghgABMEOAAJghQADMECAAZggQADMECIAZAgTADAECYIYA
      ATBDgACYIUAAzBAgAGYIEAAzBAiAGQIEwAwBAmCGAAEwQ4AAmCFAAMwQIABmCBAAMwQIgBkC
      BMAMAQJghgABMEOAAJghQADMECAAZggQADMECIAZAgTADAECYIYAATBDgACYIUAAzBAgAGYI
      EAAzBAiAGQIEwAwBAmCGAAEwQ4AAmCFAAMwQIABmCBAAMwQIgBkCBMAMAQJghgABMEOAAJgh
      QADMECAAZggQADMECIAZAgTADAECYIYAATBDgACYIUAAzHhbDwBSWcabWvg/H+jkhSt6vqwJ
      Mb1duq3SvFRlbP5M6cnrdCzruAoKzzpX+NZX3YZt1KzHw+o0sJfq+bh0s8AlESBzmdq14MOL
      4+NipTlrlfTua0rZc1Rll7pDcZ5OHd6m3Uu2afenIQp/cpb6dWnKFBluRYCMFW1+XVsyzrpv
      A6V5yvxoshJW75Xjah/jOKC0Nx7RiZHvadjdLdw3Ntz0CJCloo3a9OGG8hlJA7WfMkcBCx/R
      lkMu3Max5UqqFh8/BUYMU+TPB6tV8+YKCKgtyaGzpw7q8NpYbYhP1GmHJBUpe/FMpXSeo/YN
      XDgeoAoCZMahwx//SXsKnEu+3f5bPw2vpVS3bc9HdSJHq8/IMQppXPuCdd7yqdtaIUP/ouCQ
      P2rhnHidkSTHdu1an672Q9u6bVS4uXGIb6TsyHxtWvudc8G7i7oN7y8/d23MO0Th4xdo1OSY
      S8SnOr+op9U1vHL5ZPo3KnTXuHDTYwZkIkepC95VbvlS0ANT3HeYc2tX9Z02UsENr/ZHHaSA
      +lUWC06pRJK/G4YGECADRZtnaVNa+YnnJmPU/143nuitF6Hga3pAoUrOVFkMakx84DYcgtW0
      os3avKjyxHP4yDFqXMt4TFWUHVmkncmVy/Wat9KVD9qAH44A1SiHclb8VWn5ziWvqEnq2cFz
      5hdl+V/qi5lvVxwaSh3Vvi8noOE+HILVpOwP9eXK8vfYvbuo1yP3uu/E8zUq2jtX8a+8o+zi
      87f4qNGDz/EWPNyKANWYHKXMm1t54nnIs2rnCb/cpXk6suw3WrFsV7UPKt7ac5p+PjiUKTLc
      igDVkKLtr2vr+RPPgcPVa5D9L3dpzlqtn/0HpWVV/SS2n4KHzNagoe09ZnaGGxcBqgmlO7Rt
      /ho5j24CFfbYeN1heeK5NE9HEqZp7afnP/VczjdSXf5zhrqG1TePI24OBMjtHMr55M9KqTjx
      /Ix6RRmeeC5I0dbZ/6Hte4uq3OijOpExGhgzWsEBZiPDTYgAuVv2Yq1fff7Eczt1H2534rns
      eIJWT5uqjPwqN/q2UcTY6erTrZk86NMAuEnccu7cuXOXWhG3s6Smx3IDyte/5gzR58mu+Gv3
      MHWf9p46X9unCisVbNTaF5/Tnirx8W7z77pv4ljdHsjrEGyw57nVLn3rkvhcp9IM7Xj1hSrx
      8dFtA2Zp2KiunGiGKc413gROJEyt9p1Dt/acRnzgEZgBuVVvDYhL1ICrvn+mdrw0ovL7gFzx
      laxFa5T06Z7K5eZP6v7HexMfeARmQDe4kq8/U0bFW+0+Chv6qBpwthkeghnQj1X2PC16IbbK
      320N0r/F/VahF9wtKy2pylIPNQvnRw7Pwd54Q8tU7sGqJ8E36POJ0fr8mp7j0mEDXIFDsBta
      gUr4OkN4MAJ0Q8tVQe733wuwwgcRAZhhBgTADAECYIYAATBDgACYIUAAzBAgAGYIEAAzBAiA
      GQIEwAwBAmCGAAEwQ4AAmCFAAMwQIFzSiZVjFTsuWotWZloPBTcwvhHxStJe1TszF6tYkm//
      2Ro7uqtpsTPmRmvV5uq3efk3VqPIRxU96iGuaoqLedg+rNIsZSa8ra/WrNPR/CJmQFdyeEeC
      ioN+qS59AlW8bYOyrAckyfkVqYmaEJeoCXFfauyvn5B/6ita+uIMHSz6/kdXkz1Pi8ZFa23y
      xatuG/yeJsQl6uHBLVwyatjwrH04RymvjNCKNcWKeG65xsclEqDL26H9SfnyjeqjrlG95FWQ
      oP1p1mO6UG35NrtP9zzxC/nmL1NyEl9/iKo8bB/OTlBq2lkFDXxKEU395SUOwS4vY6sOFPio
      ZbtIeYUfU3PF68A3u9UnPMK5vihBKydO1aGeL+uJmN5VSp6rlJlDtOHYKA2b8SsF15JUmqV9
      H/1JSeu2Kb9Y8g5sr9CB3eRYk6U7X73+L3z3atBEdSQVFxZICpJUqO82x2lj/CodPZwnhyQv
      /5Zqetdk3X1/D/nXqn79sdw50Tp/5bCgBxc6Zz3Jf1TsnHiFTUrUgKjy/5K50Vr17QQNf7qV
      9i96TSn/PKhih58Ce/5a9z9+r+pWXO7HoVPbY/XF4qU6fKxI8q2vJp1GqFnJP3Sq1/KK54Ob
      edo+XMtbXpLOnM5XmZwnoJkBXUbOjjU6ff4yNn4RCm4und6yTjnn7+DXR62jpLJdSTpSWuWB
      RV8pM02q032A8wenTCXPGKHVSV6KmPSpnoxL1LgZf1CTf72jjPyLNvuDlGUfUJ58FBjUsPyW
      POXsk9qOjdPYt52HaiMeaqHjy5/VJ8vSJbVQ55cSNWHaBAVJCpt0/pDuKg65suZrzaLdavxg
      nMa+tV6Pje+j4s3Ttemrym+/P5HwlP7+RoJu6TtTY95M1IQ5izWwdbK27/jONf9gXBWP24cb
      9VKbUB+dTnheK1buVGEpAbqMdB3YniU1b68mfpLUQs06NJVyv9CBijeF/BXatY9U8Jky0isf
      WbJznQ6pqdp2dr7KlGx5U1syblXYY9PUOaKRakny8gtWnbouGGZpoU7tnqcV78dLoTHq1tW/
      fMUdCn90kiJaBcunliTVVr1+Y9UuSDqZnKQT17PNpo9q0K9iFNLUX17yln+LNqqjs8rPPe5c
      X7RGSR+nyqfn87p3cBcF+Eiq5a+6DW67nq3imnniPtxCUc+8ru6RPjqyZILenzScQ7BLylyn
      vUelOoO76vyvTeOf9JbvysU6kJKpbi2cs4Tane5SS22oMq116PA/N6ksaKRalc9Js1I3qUz9
      FdLB/5KbunbxWjUuvmLJyz9crYfGanT/jvK/4hVPA1TbVUO4kvSvdNAhterUQ7VrYHO4DE/d
      hwPaq/PkpepYsE+H1s1nBnQpJ1I26qQCFfKTiMob23ZSc0m5W9dVziDKp7Cnt2/ScUkqTVbm
      rrOq072fGpffpaz0rNS8jYJcdjnk8nfBZr+ssECpzDtUrXtcGB+HCvd8pM+mD9U746MVOy5a
      seOqXHPenUodKlOYgu7gtc2SZ+/DUq2A1goZ/HtmQBfL1P6tzlOyKTOjlXLh6kNrtT97tDoH
      SxVT2LkblZkdo4YnNmhfQVO16xxR/TFZ3+qkJJcehAT01s+mTFDe1FitfjVEw38zuuKa72Vp
      c7Ro5ieqc/d0DXu2u+r7eUsqP/HsyjFcVoZOHpMUXCMbw0V+JPuweBfsYt9t1cFDUr0h72vU
      0LbVVpWl/kXvzfpYB7/JUedg5+uDcwo7VYfSctUsd6OKgwZWTF0lqf7tYZIjWUczpZYu/kiN
      1+0jddcD67R4Saz+791QjYjpLT9J+ft36ozuVr+RvVT/Kp7n9IlcOd89c4HgEAXprLL2pUsd
      2n7//eF6nroPF+Sp0K9+tdk6h2AXOP31WmWrqVp1vPiXx+vO/modIGXvSFTFez5+fdS2s4+O
      JM3Wzi1Z1aauknRbvxiFBR7S1x+8qSP5DkklKtg9TynfVH/uH/anD95qMPgV3dOzgc5sfkHL
      l6erVFLtuvXlpS3avz1PZZJKC/Zp7wcvKfnCT6EFd9QdgVL2xmXKKXKO7WyR4xq2fwnBD+in
      PRvoZPyflbSnfPt527Xj85qZe8GD9+H01zTv+YnatDFVJwucFz4lQNXkaP+2ndIFrwAVakWp
      RaSPlJagvRXvKPurZdde8kpfo725le8cVAjorZ+9MF13li3Vsmf6KvbpR7Q+I1Ktwl015kCF
      Pj5H3UOlY0tjtHRlhvyif6dB9zTWwbfv01vj7tK8/52vwh6TFdn0wsdGqueU59TizIdaOrGv
      YscPUfzmoy4Yz990T68ypc5ybn/hglQFd+lync+Lq+PB+3CH/9LDw6OUv/63Wjqlv2LHRXNp
      ZhsO7Xurr1bvG6MHX36q2qvNjaps++/11hsp6vTiEvW43k9ewgO4Zh9mBuRu6YuqTTlVWqi8
      rTO1dYePGg0YfAPGZ5d2/WOFjuackvOzbQ6dzVqrdUu/lFfoQwonPj8+btyHOQntbg1vl8+q
      v2rZkr06lV8kyUe+wVG6c9wC9ejWzHp0bhCsurX/rk2z3lDu8Sp/BtL7dxrxiwGqZz08XDs3
      7sMcggEwwyEYADMECIAZAgTADAECYIYAATBDgACYIUAAzBAgAGYIEAAzBAiAGQIEwAwBAmCG
      AAEwQ4AAmCFAAMwQIABmCBAAMwQIgBkCBMAMAQJghgABMEOAAJghQADMECAAZggQADMECIAZ
      AgTADAECYIYAATBDgACYIUAAzBAgAGYIEAAzBAiAGQIEwAwBAmCGAAEwQ4AAmCFAAMwQIABm
      CBAAMwQIgBkCBMAMAQJghgABMEOAAJghQADMECAAZggQADMECIAZAgTADAECYIYAATBDgACY
      IUAAzBAgAGYIEAAzBAiAGQIEwAwBAmDm/wF96w33xUGs0QAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
